
# willybe gitlab CI
# https://docs.gitlab.com/ce/ci/environments.html#making-use-of-the-environment-url
# https://docs.gitlab.com/ee/ci/ssh_keys/

stages:
  - staging
  - production

# execute avant chaque job
before_script:
  - apt-get update
  - apt-get install -y rsync
  - npm install

  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

  ## Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)

  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  - echo -n "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

  ## Create the SSH directory and give it the right permissions
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

deploy staging:
  stage: staging
  image: node:latest
  cache:
    paths:
    - node_modules/
  script:
    # select l'env
    - node willybe selectEnv staging
    # compiler les assets
    - node willybe production
    # sync
    - rsync --checksum -i -r -a -e ssh --delete dist/ <ssh url>:staging

deploy production:
  stage: production
  image: node:latest
  cache:
    paths:
    - node_modules/
  script:
    # select l'env
    - node willybe selectEnv production
    # compiler les assets
    - node willybe production
    # sync
    - rsync --checksum -i -r -a -e ssh --delete dist/ <ssh url>:www | grep -v '^\.'
  # trigger
  # when: manual


