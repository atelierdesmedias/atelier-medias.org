sudo: required
cache:
  - npm

language: php
php:
  - 7.1

branches:
  only:
    - staging
    - production

env:
  - NODE_RELEASE=10.x

# Ajouter le domaine au ficher known host de la machine virtuelle
addons:
  ssh_known_hosts:
    - atelier-medias.org
    - robot.atelier-medias.org

# config SSH
before_install:
  - echo -e "Host ${DEPLOY_HOST}ntStrictHostKeyChecking non" >> ~/.ssh/config
  - openssl aes-256-cbc -K $encrypted_087b74a6dd92_key -iv $encrypted_087b74a6dd92_iv -in robot-id_rsa.enc -out /tmp/robot-id_rsa -d
  - eval "$(ssh-agent -s)"
  - sudo chmod 600 /tmp/robot-id_rsa
  - ssh-add /tmp/robot-id_rsa

install:
  # installer node
  - curl -sL "https://deb.nodesource.com/setup_${NODE_RELEASE}"
  - sudo apt-get install -y nodejs
  # aller dans le dossier dist/
  - cd dist/
  # installer les dependances php
  - composer install
  # retourner à la racine
  - cd ..
  # installer des dépendances front
  - npm ci

# selectionner l'environnement de dev en fonction de la branch
# TODO modifier tester la selection d'environment
before_script:
  - if [ "$TRAVIS_BRANCH" == "staging" ]; then npm run selectEnv staging; fi
  - if [ "$TRAVIS_BRANCH" == "production" ]; then npm run selectEnv production; fi

script:
  # builder les sources
  - npm run production
  # transférer les sources sur le serveur
  - if [ "$TRAVIS_BRANCH" == "staging" ]; then rsync --checksum -i -r -a -e ssh --omit-dir-times --quiet --delete dist/public/ $SSH_USER@$DEPLOY_HOST:${DEPLOY_STAGING_FOLDER}; fi
  # TODO: decommenter pour la mise en prod
  # - if [ "$TRAVIS_BRANCH" == "production" ]; then rsync --checksum -i -r -a -e ssh --omit-dir-times --quiet --delete dist/public/ $SSH_USER@$DEPLOY_HOST:${DEPLOY_PROD_FOLDER}; fi

