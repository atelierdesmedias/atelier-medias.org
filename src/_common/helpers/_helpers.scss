/*
 * Helpers mixins
 * SASS lang
*/

// ----------------------------------------------------------------------------- GRID

/**
 * position an element with flex
 */

@mixin flex ($direction:row, $wrap:wrap, $justifyContent:flex-start, $alignItems:flex-start)
{
  // flex, inline-flex
  display: flex;

  // row, row-reverse, column, column-reverse
  flex-direction: $direction;

  // nowrap, wrap, wrap-reverse
  flex-wrap: $wrap;

  // flex-start, flex-end, center, space-between, space-around
  justify-content: $justifyContent;

  // flex-start, flex-end center, baseline, stretch
  align-items: $alignItems;
}

// ----------------------------------------------------------------------------- POSITION

/**
 * absolute center an element
 */
@mixin absoluteCenter($axis:xy)
{
  position: absolute;

  @if ($axis == xy) or ($axis == null)
  {
    transform: translate(-50%, -50%);
    top: 50%;
    left: 50%;
  }
  @else if ($axis == x)
  {
    transform: translateX(-50%);
    top: auto;
    left: 50%;
  }
  @else if ($axis == y)
  {
    transform: translateY(-50%);
    top: 50%;
    left: auto;
  }
}

/**
 * back to relative position
 */

@mixin resetAbsoluteCenter ()
{
  position: relative;
  top: auto;
  left: auto;
  transform: translate(0,0);
}

// ----------------------------------------------------------------------------- RESET

/**
 * reset button style
 */

@mixin resetButtonStyle ()
{
  background: none;
  border: 0;
  color: inherit;
  font: inherit;
  line-height: normal;
  overflow: visible;
  border-radius: 0;
}

/**
 * reset focus button style
 */

@mixin resetFocusButtonStyle ()
{
  outline-style:none;
  box-shadow:none;
  border-color:transparent;
}

/**
 * reset select style
 */

@mixin resetSelectFormStyle ()
{
  appearance: none;
  line-height: normal;
  background-image: none;
}

// ----------------------------------------------------------------------------- ZONE

/**
 * Set bigger hitzone with :after.
 */

@mixin hitZone ($horizontalSize: 10px, $verticalSize: 10px, $color: transparent)
{
  &:after
  {
    content: '';
    position: absolute;
    top: -$verticalSize;
    right: -$horizontalSize;
    bottom: -$verticalSize;
    left: -$horizontalSize;
    background-color: $color;
  }
}

// ----------------------------------------------------------------------------- SCROLLS

/**
 * Patch scrolling on iOS
 * Hide visible scrollBar on IE10+ and chrome PC
 */

@mixin scrollPatch ()
{
  // Compatibilit√© IE / iPad
  overflow-scrolling: touch;
  -webkit-overflow-scrolling: touch;

  // Masquer les scrollBar sur ie10+
  -ms-overflow-style: none;

  // Masquer les scrollbar sur chrome
  &::-webkit-scrollbar
  {
    width: 0 !important;
    height: 0 !important;
  }
}

/**
 * Force scrollBar to be shown
 */

@mixin showScrollBar ()
{
  -ms-overflow-style: scrollbar;
  &::-webkit-scrollbar
  {
    width: auto;
    height: auto;
  }
}

/**
 * Enable vertical scroll on an element and patch it.
 */

@mixin verticalScroll ()
{
  overflow: hidden;
  overflow-y: scroll;
  @include scrollPatch();
}

/**
 * Enable horizontal scroll on an element and patch it.
 */

@mixin horizontalScroll ()
{
  overflow: hidden;
  overflow-x: scroll;
  @include scrollPatch();
}

// ----------------------------------------------------------------------------- SELECTION

/**
 * Disable text selection on an element
 */

@mixin disableSelection ()
{
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/**
 * Enable text selection on an element
 */

@mixin enableSelection ()
{
  -webkit-user-select: all;
  -khtml-user-select: all;
  -moz-user-select: all;
  -ms-user-select: all;
  user-select: all;
}

/**
 * Remove touch callout on safari mobile
 */

@mixin disableTouchCallout ()
{
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0);
}

// ----------------------------------------------------------------------------- GEOMETRIC

/**
 * line
 * ex: @include line (320px, 2px, @color_link, 0);
 */

@mixin line ($x, $y, $color, $radius)
{
  display: block;
  position: relative;
  width: $x;
  height: $y;
  background-color: $color;
  border-radius: $radius;
}

// ----------------------------------------------------------------------------- FONTS

/**
 * Declare and load a font
 */

@mixin declareFontFace ($basePath, $fontFileName, $fontFamilyName, $fontWeight:normal, $fontStyle: normal, $SVGName: '')
{
  @font-face
  {
    font-family: $fontFamilyName;

    src:  url('#{$basePath}#{$fontFileName}.eot?#iefix')    format('embedded-opentype'),
    url('#{$basePath}#{$fontFileName}.woff')                format('woff'),
    url('#{$basePath}#{$fontFileName}.ttf')                 format('truetype');
    //url('#{$basePath}#{$fontFileName}.svg##{$SVGName}')       format('svg');

    font-weight: $fontWeight;
    font-style: $fontStyle;
  }
}

/**
 * Smooth fonts
 */

@mixin fontSmooth ()
{
  // Activer l'anti-aliasing
  font-smooth: always;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-rendering: optimizeLegibility;
}

